{
  "version": 3,
  "sources": ["../index.js", "../src/configurations/index.js", "../src/server.js", "../src/utils/scripts.js", "../src/routes/auth.js", "../src/controllers/auth.js"],
  "sourcesContent": ["import configEnv from './src/configurations';\nimport app from './src/server';\n\nconst port = configEnv.port || 3000;\n\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`);\n});\n\nexport default app", "import dotenv from \"dotenv\";\ndotenv.config();\n\nconst config = {\n  port: process.env.PORT,\n  nodeEnv: process.env.NODE_ENV,\n  runtime: process.env.RUNTIME || undefined,\n  esBuild: process.env.ES_BUILD || undefined,\n  supabase: {\n    url: process.env.SUPABASE_URL,\n    serviceRoleKey: process.env.SUPABASE_SERVICE_ROLE_KEY,\n  },\n  logging: false\n};\n\nexport default config;\n", "import express from \"express\";\nimport { formatResponse } from \"./utils/scripts\";\nimport auth from \"./routes/auth\";\n\nconst app = express();\nconst apiRouter = express.Router();\n\napp.use(express.json());\napp.get(\"/\", (_, res) => res.redirect(\"/api\"));\n\napiRouter.get(\"/\", (_, res) =>\n  formatResponse({\n    identifier: \"healthCheck\",\n    res,\n    msgSuccess: \"API is running properly!\",\n  })\n);\napiRouter.use(\"/auth\", auth);\n\napp.use(\"/api\", apiRouter);\n\nexport default app;\n", "import config from \"../configurations\";\n\nexport function formatResponse({\n  identifier = 'Response',\n  res,\n  code = 200,\n  data = null,\n  msgSuccess = 'Permintaan berhasil.',\n  msgError = 'Sepertinya ada yang tidak beres.',\n  msgEmpty = 'Data tidak di temukan.',\n}) {\n  let status = code;\n  let message = '';\n  let finalData = null;\n\n  if ([200, 201, 204].includes(status)) {\n    if (Array.isArray(data) && data.length === 0) {\n      status = 404;\n      message = msgEmpty;\n    } else {\n      message = msgSuccess;\n      finalData = data;\n    }\n  } else {\n    message = msgError;\n  }\n\n  const result = {\n    status,\n    message,\n    data: finalData,\n  };\n\n  if (config.logging === 'development') {\n    console.log(`[${identifier}]`, result);\n  }\n\n  return res.status(status).json(result);\n}", "// routes/auth.js\nimport express from \"express\";\nimport { loginController } from \"../controllers/auth\";\n\nconst app = express.Router();\n\napp.get(\"/login\", loginController);\n\nexport default app;", "import { formatResponse } from \"../utils/scripts\";\n\nexport const loginController = (_, res) => {\n  return formatResponse({ identifier: 'login', res, msgSuccess: \"Login successful!\" });\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,oBAAmB;AACnB,cAAAA,QAAO,OAAO;AAEd,IAAM,SAAS;AAAA,EACb,MAAM,QAAQ,IAAI;AAAA,EAClB,SAAS,QAAQ,IAAI;AAAA,EACrB,SAAS,QAAQ,IAAI,WAAW;AAAA,EAChC,SAAS,QAAQ,IAAI,YAAY;AAAA,EACjC,UAAU;AAAA,IACR,KAAK,QAAQ,IAAI;AAAA,IACjB,gBAAgB,QAAQ,IAAI;AAAA,EAC9B;AAAA,EACA,SAAS;AACX;AAEA,IAAO,yBAAQ;;;ACff,IAAAC,kBAAoB;;;ACEb,SAAS,eAAe;AAAA,EAC7B,aAAa;AAAA,EACb;AAAA,EACA,OAAO;AAAA,EACP,OAAO;AAAA,EACP,aAAa;AAAA,EACb,WAAW;AAAA,EACX,WAAW;AACb,GAAG;AACD,MAAI,SAAS;AACb,MAAI,UAAU;AACd,MAAI,YAAY;AAEhB,MAAI,CAAC,KAAK,KAAK,GAAG,EAAE,SAAS,MAAM,GAAG;AACpC,QAAI,MAAM,QAAQ,IAAI,KAAK,KAAK,WAAW,GAAG;AAC5C,eAAS;AACT,gBAAU;AAAA,IACZ,OAAO;AACL,gBAAU;AACV,kBAAY;AAAA,IACd;AAAA,EACF,OAAO;AACL,cAAU;AAAA,EACZ;AAEA,QAAM,SAAS;AAAA,IACb;AAAA,IACA;AAAA,IACA,MAAM;AAAA,EACR;AAEA,MAAI,uBAAO,YAAY,eAAe;AACpC,YAAQ,IAAI,IAAI,UAAU,KAAK,MAAM;AAAA,EACvC;AAEA,SAAO,IAAI,OAAO,MAAM,EAAE,KAAK,MAAM;AACvC;;;ACrCA,qBAAoB;;;ACCb,IAAM,kBAAkB,CAAC,GAAG,QAAQ;AACzC,SAAO,eAAe,EAAE,YAAY,SAAS,KAAK,YAAY,oBAAoB,CAAC;AACrF;;;ADAA,IAAM,MAAM,eAAAC,QAAQ,OAAO;AAE3B,IAAI,IAAI,UAAU,eAAe;AAEjC,IAAO,eAAQ;;;AFJf,IAAMC,WAAM,gBAAAC,SAAQ;AACpB,IAAM,YAAY,gBAAAA,QAAQ,OAAO;AAEjCD,KAAI,IAAI,gBAAAC,QAAQ,KAAK,CAAC;AACtBD,KAAI,IAAI,KAAK,CAAC,GAAG,QAAQ,IAAI,SAAS,MAAM,CAAC;AAE7C,UAAU;AAAA,EAAI;AAAA,EAAK,CAAC,GAAG,QACrB,eAAe;AAAA,IACb,YAAY;AAAA,IACZ;AAAA,IACA,YAAY;AAAA,EACd,CAAC;AACH;AACA,UAAU,IAAI,SAAS,YAAI;AAE3BA,KAAI,IAAI,QAAQ,SAAS;AAEzB,IAAO,iBAAQA;;;AFlBf,IAAM,OAAO,uBAAU,QAAQ;AAE/B,eAAI,OAAO,MAAM,MAAM;AACrB,UAAQ,IAAI,sCAAsC,IAAI,EAAE;AAC1D,CAAC;AAED,IAAO,gBAAQ;",
  "names": ["dotenv", "import_express", "express", "app", "express"]
}
